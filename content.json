[{"title":"python相关","date":"2017-07-25T06:12:35.000Z","path":"2017/07/25/python相关/","text":"获取命令行参数如运行 python run.py hello 在run.py内部获得hello12import sysprint sys.argv[1] #hello 连接elasticsearch12es = Elasticsearch([&#123;'host':'10.255.83.22','port':9200&#125;])es.delete(index='htc',timeout=30)#清理htc 清理hec_stc数据库（执行数据库中函数）123456conn = psycopg2.connect(database='htc_stc', user=\"postgres\",password=\"1111\", host=\"10.255.84.153\", port=\"5432\")cur = conn.cursor()cur.execute(\"SELECT public.delete_event_funtion()\")#函数语句获得方式如下图1conn.commit()cur.close()conn.close()","tags":[]},{"title":"Javascript数组","date":"2017-07-24T06:10:43.000Z","path":"2017/07/24/arry-detail/","text":"排序sort方法123456789var arry=[5,60,20,80,69,2,4]arry.sort(function(a,b)&#123; return a-b&#125;)//[2, 4, 5, 20, 60, 69, 80]arry.sort(function(a,b)&#123; return b-a&#125;)//[80, 69, 60, 20, 5, 4, 2] 冒泡排序 思路:将每个数字都放到数组里，然后将数组的每个数字取值，依次和后面的数字将比较，如果后面的数字大，那顺序不变，相反那就将后面的数字和前面的数字交换位置；123456789101112var array = [5,60,20,80,69,2,4];var temp = 0;for (var i = 0; i &lt; array.length; i++)&#123; for (var j = 0; j &lt; array.length - i; j++)&#123; if (array[j] &gt; array[j + 1])&#123; temp = array[j + 1]; array[j + 1] = array[j]; array[j] = temp; &#125; &#125;&#125;console.log(array);","tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://hanmhui.com/tags/Javascript/"}]},{"title":"前端表单验证常用的15个正则表达式","date":"2017-07-18T01:17:33.000Z","path":"2017/07/18/form-checkout/","text":"在表单验证中，使用正则表达式来验证正确与否是一个很频繁的操作，本文收集整理了15个常用的javaScript正则表达式，其中包括用户名、密码强度、整数、数字、电子邮件地址（Email）、手机号码、身份证号、URL地址、 IPv4地址、 十六进制颜色、 日期、 QQ号码、 微信号、车牌号、中文正则。 1 用户名正则1234//用户名正则，4到16位（字母，数字，下划线，减号）var uPattern = /^[a-zA-Z0-9_-]&#123;4,16&#125;$/;//输出 trueconsole.log(uPattern.test(\"hanminghui\")); 2 密码强度正则1234 //密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符var pPattern = /^.*(?=.&#123;6,&#125;)(?=.*\\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&amp;*? ]).*$/;//输出 trueconsole.log(\"==\"+pPattern.test(\"hanminghui#\")); 3 整数正则123456789101112//正整数正则var posPattern = /^\\d+$/;//负整数正则var negPattern = /^-\\d+$/;//整数正则var intPattern = /^-?\\d+$/;//输出 trueconsole.log(posPattern.test(\"42\"));//输出 trueconsole.log(negPattern.test(\"-42\"));//输出 trueconsole.log(intPattern.test(\"-42\")); 4 数字正则123456789//正数正则var posPattern = /^\\d*\\.?\\d+$/;//负数正则var negPattern = /^-\\d*\\.?\\d+$/;//数字正则var numPattern = /^-?\\d*\\.?\\d+$/;console.log(posPattern.test(\"42.2\"));console.log(negPattern.test(\"-42.2\"));console.log(numPattern.test(\"-42.2\")); 5 Email正则1234//Email正则var ePattern = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]&#123;2,4&#125;)$/;//输出 trueconsole.log(ePattern.test(\"574192341@qq.com\")); 6 手机号码正则12345 //手机号正则var mPattern = /^1[34578]\\d&#123;9&#125;$/; //输出 trueconsole.log(mPattern.test(\"15507621888\")); 7 身份证号正则1234//身份证号（18位）正则var cP = /^[1-9]\\d&#123;5&#125;(18|19|([23]\\d))\\d&#123;2&#125;((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d&#123;3&#125;[0-9Xx]$/;//输出 trueconsole.log(cP.test(\"11010519880605371X\")); 8 URL正则1234//URL正则var urlP= /^((https?|ftp|file):\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]&#123;2,6&#125;)([\\/\\w \\.-]*)*\\/?$/;//输出 trueconsole.log(urlP.test(\"http://hanminghui.github.io\")); 9 IPv4地址正则1234//ipv4地址正则var ipP = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.)&#123;3&#125;(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;//输出 trueconsole.log(ipP.test(\"115.28.47.26\")); 10 十六进制颜色正则1234//RGB Hex颜色正则var cPattern = /^#?([a-fA-F0-9]&#123;6&#125;|[a-fA-F0-9]&#123;3&#125;)$/;//输出 trueconsole.log(cPattern.test(\"#b8b8b8\")); 11 日期正则1234567891011121314//日期正则，简单判定,未做月份及日期的判定var dP1 = /^\\d&#123;4&#125;(\\-)\\d&#123;1,2&#125;\\1\\d&#123;1,2&#125;$/;//输出 trueconsole.log(dP1.test(\"2017-05-11\"));//输出 trueconsole.log(dP1.test(\"2017-15-11\"));//日期正则，复杂判定var dP2 = /^(?:(?!0000)[0-9]&#123;4&#125;-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]&#123;2&#125;(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/;//输出 trueconsole.log(dP2.test(\"2017-02-11\"));//输出 falseconsole.log(dP2.test(\"2017-15-11\"));//输出 falseconsole.log(dP2.test(\"2017-02-29\")); 12 QQ号码正则1234//QQ号正则，5至11位var qqPattern = /^[1-9][0-9]&#123;4,10&#125;$/;//输出 trueconsole.log(qqPattern.test(\"574192341\")); 13 微信号正则1234//微信号正则，6至20位，以字母开头，字母，数字，减号，下划线var wxPattern = /^[a-zA-Z]([-_a-zA-Z0-9]&#123;5,19&#125;)+$/;//输出 trueconsole.log(wxPattern.test(\"h_574192341\")); 14 车牌号正则1234 //车牌号正则var cPattern = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]&#123;1&#125;[A-Z]&#123;1&#125;[A-Z0-9]&#123;4&#125;[A-Z0-9挂学警港澳]&#123;1&#125;$/;//输出 trueconsole.log(cPattern.test(\"黑A39006\")); 15 包含中文正则1234//包含中文正则var cnPattern = /[\\u4E00-\\u9FA5]/;//输出 trueconsole.log(cnPattern.test(\"韩明惠\"));","tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://hanmhui.com/tags/Javascript/"}]},{"title":"比较好的文章","date":"2017-07-17T07:13:14.000Z","path":"2017/07/17/good-link/","text":"60个开发者不容错过的免费资源库 Markdown 语法说明 (简体中文版) Postgres SQL教程 Elasticsearch权威指南(中文版) ES英文api文档 Elasticsearch 测试(公司内部) Python 2.7教程（廖雪峰） 校招简历相关 Python开发资源速查表","tags":[{"name":"技术文章","slug":"技术文章","permalink":"http://hanmhui.com/tags/技术文章/"}]},{"title":"Javascript常用方法","date":"2017-07-14T07:27:32.000Z","path":"2017/07/14/Javascript常用方法/","text":"1.手机类型判断1234567var BrowserInfo = &#123; userAgent: navigator.userAgent.toLowerCase() isAndroid: Boolean(navigator.userAgent.match(/android/ig)), isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)), isIpad: Boolean(navigator.userAgent.match(/ipad/ig)), isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),&#125; 2.返回字符串长度，汉子计数为212345678910function strLength(str) &#123; var a = 0; for (var i = 0; i &lt; str.length; i++) &#123; if (str.charCodeAt(i) &gt; 255) a += 2;//按照预期计数增加2 else a++; &#125; return a;&#125; 3.获取url中的参数1234function GetQueryStringRegExp(name,url) &#123; var reg = new RegExp(\"(^|\\?|&amp;)\" + name + \"=([^&amp;]*)(\\s|&amp;|$)\", \"i\"); if (reg.test(url)) return decodeURIComponent(RegExp.$2.replace(/+/g, \" \")); return \"\";&#125; 4.js绑定事件适用于任何浏览器的元素绑定123456789101112function eventBind(obj, eventType, callBack) &#123; if (obj.addEventListener) &#123; obj.addEventListener(eventType, callBack, false); &#125; else if (window.attachEvent) &#123; obj.attachEvent('on' + eventType, callBack); &#125; else &#123; obj['on' + eventType] = callBack; &#125;&#125;;eventBind(document, 'click', bodyClick); 5.获得当前浏览器JS的版本 123456789101112131415161718192021222324252627282930313233343536373839404142434445function getjsversion()&#123;var n = navigator;var u = n.userAgent;var apn = n.appName;var v = n.appVersion;var ie = v.indexOf('MSIE ');if (ie &gt; 0)&#123; apv = parseInt(i = v.substring(ie + 5)); if (apv &gt; 3) &#123; apv = parseFloat(i); &#125;&#125; else &#123; apv = parseFloat(v);&#125;var isie = (apn == 'Microsoft Internet Explorer');var ismac = (u.indexOf('Mac') &gt;= 0);var javascriptVersion = \"1.0\";if (String &amp;&amp; String.prototype) &#123; javascriptVersion = '1.1'; if (javascriptVersion.match) &#123; javascriptVersion = '1.2'; var tm = new Date; if (tm.setUTCDate) &#123; javascriptVersion = '1.3'; if (isie &amp;&amp; ismac &amp;&amp; apv &gt;= 5) javascriptVersion = '1.4'; var pn = 0; if (pn.toPrecision) &#123; javascriptVersion = '1.5'; a = new Array; if (a.forEach) &#123; javascriptVersion = '1.6'; i = 0; o = new Object; tcf = new Function('o', 'var e,i=0;try&#123;i=new Iterator(o)&#125;catch(e)&#123;&#125;return i'); i = tcf(o); if (i &amp;&amp; i.next) &#123; javascriptVersion = '1.7'; &#125; &#125; &#125; &#125; &#125;&#125;return javascriptVersion;&#125; 6.获取当前点击事件的Object对象1234567891011121314151617function getEvent() &#123;if (document.all) &#123; return window.event; //如果是ie&#125;func = getEvent.caller;while (func != null) &#123; var arg0 = func.arguments[0]; if (arg0) &#123; if ((arg0.constructor == Event || arg0.constructor == MouseEvent)|| (typeof (arg0) == \"object\" &amp;&amp; arg0.preventDefault &amp;&amp; arg0.stopPropagation)) &#123; return arg0; &#125; &#125; func = func.caller;&#125;return null;&#125;; 7.字符串截取方法1234567891011121314151617181920212223242526272829303132333435363738394041getCharactersLen: function (charStr, cutCount) &#123; if (charStr == null || charStr == '') return ''; var totalCount = 0; var newStr = ''; for (var i = 0; i &lt; charStr.length; i++) &#123; var c = charStr.charCodeAt(i); if (c &lt; 255 &amp;&amp; c &gt; 0) &#123; totalCount++; &#125; else &#123; totalCount += 2; &#125; if (totalCount &gt;= cutCount) &#123; newStr += charStr.charAt(i); break; &#125; else &#123; newStr += charStr.charAt(i); &#125; &#125; return newStr;&#125; ``` ### 8.JS弹出新窗口全屏```javascriptvar tmp = window.open(\"about:blank\", \"\", \"fullscreen=1\") tmp.moveTo(0, 0); tmp.resizeTo(screen.width + 20, screen.height); tmp.focus(); tmp.location.href = 'http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html';var config_ = \"left=0,top=0,width=\" + (window.screen.Width) + \",height=\" + (window.screen.Height); window.open('http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html', \"winHanle\", config_);//模拟form提交打开新页面var f = document.createElement(\"form\"); f.setAttribute('action', 'http://www.che168.com/pinggu/eva_' + msgResult.message[0] + '.html'); f.target = '_blank'; document.body.appendChild(f); f.submit(); 9. 全选/全不选12345678910function selectAll(objSelect) &#123; if (objSelect.checked == true) &#123; $(\"input[name='chkId']\").attr(\"checked\", true); $(\"input[name='chkAll']\").attr(\"checked\", true); &#125; else if (objSelect.checked == false) &#123; $(\"input[name='chkId']\").attr(\"checked\", false); $(\"input[name='chkAll']\").attr(\"checked\", false); &#125; &#125; 10. js判断浏览器12345678910111213141516171819202122232425判断是否是 IE 浏览器 if (document.all)&#123; alert(”IE浏览器”); &#125;else&#123; alert(”非IE浏览器”); &#125; if (!!window.ActiveXObject)&#123; alert(”IE浏览器”); &#125;else&#123; alert(”非IE浏览器”); &#125; 判断是IE几 var isIE=!!window.ActiveXObject; var isIE6=isIE&amp;&amp;!window.XMLHttpRequest; var isIE8=isIE&amp;&amp;!!document.documentMode; var isIE7=isIE&amp;&amp;!isIE6&amp;&amp;!isIE8; if (isIE)&#123; if (isIE6)&#123; alert(”ie6″); &#125;else if (isIE8)&#123; alert(”ie8″); &#125;else if (isIE7)&#123; alert(”ie7″); &#125; &#125; 11.判断浏览器1234567891011121314151617181920function getOs() &#123; if (navigator.userAgent.indexOf(\"MSIE 8.0\") &gt; 0) &#123; return \"MSIE8\"; &#125; else if (navigator.userAgent.indexOf(\"MSIE 6.0\") &gt; 0) &#123; return \"MSIE6\"; &#125; else if (navigator.userAgent.indexOf(\"MSIE 7.0\") &gt; 0) &#123; return \"MSIE7\"; &#125; else if (isFirefox = navigator.userAgent.indexOf(\"Firefox\") &gt; 0) &#123; return \"Firefox\"; &#125; if (navigator.userAgent.indexOf(\"Chrome\") &gt; 0) &#123; return \"Chrome\"; &#125; else &#123; return \"Other\"; &#125;&#125; 12.JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比12345678910111213//得到日期值并转化成日期格式，replace(/-/g, \"/\")是根据验证表达式把日期转化成长日期格式，这样再进行判断就好判断了 function ValidateDate() &#123; var beginDate = $(\"#t_datestart\").val(); var endDate = $(\"#t_dateend\").val(); if (beginDate.length &gt; 0 &amp;&amp; endDate.length&gt;0) &#123; var sDate = new Date(beginDate.replace(/-/g, \"/\")); var eDate= new Date(endDate.replace(/-/g, \"/\")); if (sDate &gt; eDate) &#123; alert('开始日期要小于结束日期'); return false; &#125; &#125; &#125; 13.移除事件123456789101112this.moveBind = function (objId, eventType, callBack) &#123; var obj = document.getElementById(objId); if (obj.removeEventListener) &#123; obj.removeEventListener(eventType, callBack, false); &#125; else if (window.detachEvent) &#123; obj.detachEvent('on' + eventType, callBack); &#125; else &#123; obj['on' + eventType] = null; &#125;&#125; 14.回车提交1234567$(\"id\").onkeypress = function (event) &#123; event = (event) ? event : ((window.event) ? window.event : \"\") keyCode = event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode); if (keyCode == 13) &#123; $(\"SubmitLogin\").onclick(); &#125;&#125; 15.JS 执行计时器123timeStart = new Date().getTime();timesEnd = new Date().getTime();document.getElementById(\"time\").innerHTML = timesEnd - timeStart; 16.JS 写Cookie1234567891011121314151617181920212223242526function setCookie(name, value, expires, path, domain) &#123; if (!expires) expires = -1; if (!path) path = \"/\"; var d = \"\" + name + \"=\" + value; var e; if (expires &lt; 0) &#123; e = \"\"; &#125; else if (expires == 0) &#123; var f = new Date(1970, 1, 1); e = \";expires=\" + f.toUTCString(); &#125; else &#123; var now = new Date(); var f = new Date(now.getTime() + expires * 1000); e = \";expires=\" + f.toUTCString(); &#125; var dm; if (!domain) &#123; dm = \"\"; &#125; else &#123; dm = \";domain=\" + domain; &#125; document.cookie = name + \"=\" + value + \";path=\" + path + e + dm;&#125;; 17. JS读Cookie123456789101112function readCookie(name) &#123; var nameEQ = name + \"=\"; var ca = document.cookie.split(';'); for (var i = 0; i &lt; ca.length; i++) &#123; var c = ca[i]; while (c.charAt(0) == ' ') c = c.substring(1, c.length); if (c.indexOf(nameEQ) == 0) &#123; return decodeURIComponent(c.substring(nameEQ.length, c.length)) &#125; &#125; return null&#125; 18. Ajax请求12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758C.ajax = function (args) &#123;var self = this;this.options = &#123; type: 'GET', async: true, contentType: 'application/x-www-form-urlencoded', url: 'about:blank', data: null, success: &#123;&#125;, error: &#123;&#125;&#125;;this.getXmlHttp = function () &#123; var xmlHttp; try &#123; xmlhttp = new XMLHttpRequest(); &#125; catch (e) &#123; try &#123; xmlhttp = new ActiveXObject(\"Msxml2.XMLHTTP\"); &#125; catch (e) &#123; xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\"); &#125; &#125; if (!xmlhttp) &#123; alert('您的浏览器不支持AJAX'); return false; &#125; return xmlhttp;&#125;;this.send = function () &#123; C.each(self.options, function (key, val) &#123; self.options[key] = (args[key] == null) ? val : args[key]; &#125;); var xmlHttp = new self.getXmlHttp(); if (self.options.type.toUpperCase() == 'GET') &#123; xmlHttp.open(self.options.type, self.options.url + (self.options.data == null ? \"\" : ((/[?]$/.test(self.options.url) ? '&amp;' : '?') + self.options.data)), self.options.async); &#125; else &#123; xmlHttp.open(self.options.type, self.options.url, self.options.async); xmlHttp.setRequestHeader('Content-Length', self.options.data.length); &#125; xmlHttp.setRequestHeader('Content-Type', self.options.contentType); xmlHttp.onreadystatechange = function () &#123; if (xmlHttp.readyState == 4) &#123; if (xmlHttp.status == 200 || xmlHttp.status == 0) &#123; if (typeof self.options.success == 'function') self.options.success(xmlHttp.responseText); xmlHttp = null; &#125; else &#123; if (typeof self.options.error == 'function') self.options.error('Server Status: ' + xmlHttp.status); &#125; &#125; &#125;; xmlHttp.send(self.options.type.toUpperCase() == 'POST' ? self.options.data.toString() : null);&#125;;this.send();&#125;; 19. JS StringBuilder 用法123456789function StringBuilder() &#123; this.strings = new Array;&#125;;StringBuilder.prototype.append = function (str) &#123; this.strings.push(str);&#125;;StringBuilder.prototype.toString = function () &#123; return this.strings.join('');&#125;; 20. JS加载到顶部LoadJS12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152function loadJS (url, fn) &#123; var ss = document.getElementsByName('script'), loaded = false; for (var i = 0, len = ss.length; i &lt; len; i++) &#123; if (ss[i].src &amp;&amp; ss[i].getAttribute('src') == url) &#123; loaded = true; break; &#125; &#125; if (loaded) &#123; if (fn &amp;&amp; typeof fn != 'undefined' &amp;&amp; fn instanceof Function) fn(); return false; &#125; var s = document.createElement('script'), b = false; s.setAttribute('type', 'text/javascript'); s.setAttribute('src', url); s.onload = s.onreadystatechange = function () &#123; if (!b &amp;&amp; (!this.readyState || this.readyState == 'loaded' || this.readyState == 'complete')) &#123; b = true; if (fn &amp;&amp; typeof fn != 'undefined' &amp;&amp; fn instanceof Function) fn(); &#125; &#125;; document.getElementsByTagName('head')[0].appendChild(s);&#125;,bind: function (objId, eventType, callBack) &#123; //适用于任何浏览器的绑定 var obj = document.getElementById(objId); if (obj.addEventListener) &#123; obj.addEventListener(eventType, callBack, false); &#125; else if (window.attachEvent) &#123; obj.attachEvent('on' + eventType, callBack); &#125; else &#123; obj['on' + eventType] = callBack; &#125;&#125;function JSLoad (args) &#123; s = document.createElement(\"script\"); s.setAttribute(\"type\", \"text/javascript\"); s.setAttribute(\"src\", args.url); s.onload = s.onreadystatechange = function () &#123; if (!s.readyState || s.readyState == \"loaded\" || s.readyState == \"complete\") &#123; if (typeof args.callback == \"function\") args.callback(this, args); s.onload = s.onreadystatechange = null; try &#123; s.parentNode &amp;&amp; s.parentNode.removeChild(s); &#125; catch (e) &#123; &#125; &#125; &#125;; document.getElementsByTagName(\"head\")[0].appendChild(s);&#125; 21.清空LoadJS加载到顶部的js引用12345678910function ClearHeadJs (src) &#123; var js = document.getElementsByTagName('head')[0].children; var obj = null; for (var i = 0; i &lt; js.length; i++) &#123; if (js[i].tagName.toLowerCase() == \"script\" &amp;&amp; js[i].attributes['src'].value.indexOf(src) &gt; 0) &#123; obj = js[i]; &#125; &#125; document.getElementsByTagName('head')[0].removeChild(obj);&#125;; 22. JS替换非法字符主要用在密码验证上出现的特殊字符123function URLencode(sStr) &#123;return escape(sStr).replace(/+/g, '%2B').replace(/\"/g, '%22').replace(/'/g, '%27').replace(///g, '%2F');&#125;; 23. 按Ctrl + Entert 直接提交表单12345678document.body.onkeydown = function (evt) &#123; evt = evt ? evt : (window.event ? window.event : null); if (13 == evt.keyCode &amp;&amp; evt.ctrlKey) &#123; evt.returnValue = false; evt.cancel = true; PostData(); &#125;&#125;; 24.获取当前时间1234567891011121314151617const time_format=()=&gt;&#123; const date=new Date(); let year=date.getFullYear(); let month=zero_add(date.getMonth()+1); let day=zero_add(date.getDate()); let hours=zero_add(date.getHours()); let minutes=zero_add(date.getMinutes()); let seconds=zero_add(date.getSeconds()); return year+'-'+month+'-'+day+\" \"+hours+':'+minutes+':'+seconds // 2017-7-14 14:02:07&#125;const zero_add=(date)=&gt;&#123; if(date&lt;10) date='0'+date; return date;&#125;console.log(time_format()) 25. Js去掉空格方法123456789String.prototype.Trim = function()&#123; return this.replace(/(^s*)|(s*$)/g, \"\"); &#125;String.prototype.LTrim = function()&#123; return this.replace(/(^s*)/g, \"\");&#125;String.prototype.RTrim = function()&#123; return this.replace(/(s*$)/g, \"\");&#125; 26. Js动态移除head里的js引用12345678910this.ClearHeadJs = function (src) &#123;var js = document.getElementsByTagName('head')[0].children;var obj = null;for (var i = 0; i &lt; js.length; i++) &#123; if (js[i].tagName.toLowerCase() == \"script\" &amp;&amp; js[i].attributes['src'].value.indexOf(src) &gt; 0) &#123; obj = js[i]; &#125;&#125;document.getElementsByTagName('head')[0].removeChild(obj);&#125;; 27.整个UL点击事件 加在UL里的onclick里1234567891011121314function CreateFrom(url, params) &#123; var f = document.createElement(\"form\"); f.setAttribute(\"action\", url); for (var i = 0; i &lt; params.length; i++) &#123; var input = document.createElement(\"input\"); input.setAttribute(\"type\", \"hidden\"); input.setAttribute(\"name\", params[i].paramName); input.setAttribute(\"value\", params[i].paramValue); f.appendChild(input); &#125; f.target = \"_blank\"; document.body.appendChild(f); f.submit();&#125;; 28. 判断浏览器使用的是哪个 JS 版本 &lt;script language=”javascript”&gt; var jsversion = 1.0;&lt;/script&gt;&lt;script language=”javascript1.1”&gt; jsversion = 1.1;&lt;/script&gt;&lt;script language=”javascript1.2”&gt; jsversion = 1.2;&lt;script language=”javascript1.3”&gt; jsversion = 1.3;&lt;script language=”javascript1.4”&gt; jsversion = 1.4;&lt;script language=”javascript1.5”&gt; jsversion = 1.5;&lt;script language=”javascript1.6”&gt; jsversion = 1.6;&lt;script language=”javascript1.7”&gt; jsversion = 1.7;&lt;script language=”javascript1.8”&gt; jsversion = 1.8;&lt;script language=”javascript1.9”&gt; jsversion = 1.9;&lt;script language=”javascript2.0”&gt; jsversion = 2.0alert(jsversion);","tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://hanmhui.com/tags/Javascript/"}]},{"title":"如何解决git提交代码时每次都要输入用户名和密码问题","date":"2017-07-05T05:23:30.000Z","path":"2017/07/05/test/","text":"在git bash 中执行设置记住密码（默认15分钟）：git config –global credential.helper cache如果想自己设置时间，可以这样做：git config credential.helper ‘cache –timeout=3600’这样就设置一个小时之后失效 长期存储密码：git config –global credential.helper store 使用ssh方式1、在每次push 的时候，都要输入用户名和密码，是不是很麻烦？原因是使用了https方式 push，在git bash里边输入 git remote -v可以看到形如一下的返回结果： 2、接下来，我们把它换成ssh方式的。123$ git remote rm origin\"$ git remote add origin git@github.com:sosout/myblog.git\"$ git push origin\" 3、问题是不是解决了呢？可能这样还不行，还应该添加SSH公匙。ssh-keygen -t rsa -C “email”,email是你注册在github上的邮箱。 我这边因为之前就有设置，所以会提示是否覆盖，小括号里有文件的路径. 4、进入自己的github主页，然后点击setting，再点击左侧导航中的SSH and GPG keys 5、点击右侧的New SSH key，会出现如下界面 这样以后push 就可以不用输入密码了","tags":[{"name":"Github","slug":"Github","permalink":"http://hanmhui.com/tags/Github/"}]}]