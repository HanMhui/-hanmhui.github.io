[{"title":"前端表单验证常用的15个正则表达式","date":"2017-07-18T01:17:33.000Z","path":"2017/07/18/form-checkout/","text":"在表单验证中，使用正则表达式来验证正确与否是一个很频繁的操作，本文收集整理了15个常用的javaScript正则表达式，其中包括用户名、密码强度、整数、数字、电子邮件地址（Email）、手机号码、身份证号、URL地址、 IPv4地址、 十六进制颜色、 日期、 QQ号码、 微信号、车牌号、中文正则。 1 用户名正则 //用户名正则，4到16位（字母，数字，下划线，减号）var uPattern = /^[a-zA-Z0-9_-]{4,16}$/;//输出 trueconsole.log(uPattern.test(“caibaojian”)); 2 密码强度正则 //密码强度正则，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符var pPattern = /^.(?=.{6,})(?=.\\d)(?=.[A-Z])(?=.[a-z])(?=.[!@#$%^&amp;? ]).*$/;//输出 trueconsole.log(“==”+pPattern.test(“caibaojian#”)); 3 整数正则 //正整数正则var posPattern = /^\\d+$/;//负整数正则var negPattern = /^-\\d+$/;//整数正则var intPattern = /^-?\\d+$/;//输出 trueconsole.log(posPattern.test(“42”));//输出 trueconsole.log(negPattern.test(“-42”));//输出 trueconsole.log(intPattern.test(“-42”)); 4 数字正则 //正数正则var posPattern = /^\\d.?\\d+$/;//负数正则var negPattern = /^-\\d.?\\d+$/;//数字正则var numPattern = /^-?\\d*.?\\d+$/;console.log(posPattern.test(“42.2”));console.log(negPattern.test(“-42.2”));console.log(numPattern.test(“-42.2”)); 5 Email正则 //Email正则var ePattern = /^([A-Za-z0-9-.])+\\@([A-Za-z0-9-.])+.([A-Za-z]{2,4})$/;//输出 trueconsole.log(ePattern.test(“99154507@qq.com”)); 6 手机号码正则 //手机号正则var mPattern = /^1[34578]\\d{9}$/; //http://caibaojian.com/regexp-example.html//输出 trueconsole.log(mPattern.test(“15507621888”)); 7 身份证号正则 //身份证号（18位）正则var cP = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;//输出 trueconsole.log(cP.test(“11010519880605371X”)); 8 URL正则 //URL正则var urlP= /^((https?|ftp|file):\\/\\/)?([\\da-z.-]+).([a-z.]{2,6})([\\/\\w .-])\\/?$/;//输出 trueconsole.log(urlP.test(“http://caibaojian.com“)); 9 IPv4地址正则 //ipv4地址正则var ipP = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;//输出 trueconsole.log(ipP.test(“115.28.47.26”)); 10 十六进制颜色正则 //RGB Hex颜色正则var cPattern = /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;//输出 trueconsole.log(cPattern.test(“#b8b8b8”)); 11 日期正则 //日期正则，简单判定,未做月份及日期的判定var dP1 = /^\\d{4}(-)\\d{1,2}\\1\\d{1,2}$/;//输出 trueconsole.log(dP1.test(“2017-05-11”));//输出 trueconsole.log(dP1.test(“2017-15-11”));//日期正则，复杂判定var dP2 = /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/;//输出 trueconsole.log(dP2.test(“2017-02-11”));//输出 falseconsole.log(dP2.test(“2017-15-11”));//输出 falseconsole.log(dP2.test(“2017-02-29”)); 12 QQ号码正则 //QQ号正则，5至11位var qqPattern = /^[1-9][0-9]{4,10}$/;//输出 trueconsole.log(qqPattern.test(“65974040”)); 13 微信号正则 //微信号正则，6至20位，以字母开头，字母，数字，减号，下划线var wxPattern = /^a-zA-Z+$/;//输出 trueconsole.log(wxPattern.test(“caibaojian_com”)); 14 车牌号正则 //车牌号正则var cPattern = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;//输出 trueconsole.log(cPattern.test(“粤B39006”)); 15 包含中文正则 //包含中文正则var cnPattern = /[\\u4E00-\\u9FA5]/;//输出 trueconsole.log(cnPattern.test(“蔡宝坚”));","tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://hanmhui.com/tags/Javascript/"}]},{"title":"比较好的文章","date":"2017-07-17T07:13:14.000Z","path":"2017/07/17/good-link/","text":"60个开发者不容错过的免费资源库 Markdown 语法说明 (简体中文版) Postgres SQL教程 Elasticsearch权威指南(中文版) Elasticsearch 测试(公司内部)","tags":[{"name":"技术文章","slug":"技术文章","permalink":"http://hanmhui.com/tags/技术文章/"}]},{"title":"Javascript常用方法","date":"2017-07-14T07:27:32.000Z","path":"2017/07/14/Javascript常用方法/","text":"1.手机类型判断 var BrowserInfo = {userAgent: navigator.userAgent.toLowerCase()isAndroid: Boolean(navigator.userAgent.match(/android/ig)),isIphone: Boolean(navigator.userAgent.match(/iphone|ipod/ig)),isIpad: Boolean(navigator.userAgent.match(/ipad/ig)),isWeixin: Boolean(navigator.userAgent.match(/MicroMessenger/ig)),} 2.返回字符串长度，汉子计数为2 function strLength(str) {var a = 0;for (var i = 0; i &lt; str.length; i++) { if (str.charCodeAt(i) &gt; 255) a += 2;//按照预期计数增加2 else a++;}return a;} 3.获取url中的参数 function GetQueryStringRegExp(name,url) {var reg = new RegExp(“(^|\\?|&amp;)” + name + “=([^&amp;]*)(\\s|&amp;|$)”, “i”);if (reg.test(url)) return decodeURIComponent(RegExp.$2.replace(/+/g, “ “)); return “”;} 4.js绑定事件适用于任何浏览器的元素绑定 function eventBind(obj, eventType, callBack) { if (obj.addEventListener) { obj.addEventListener(eventType, callBack, false); } else if (window.attachEvent) { obj.attachEvent(‘on’ + eventType, callBack); } else { obj[‘on’ + eventType] = callBack; }};eventBind(document, ‘click’, bodyClick); 5.获得当前浏览器JS的版本 function getjsversion(){var n = navigator;var u = n.userAgent;var apn = n.appName;var v = n.appVersion;var ie = v.indexOf(‘MSIE ‘);if (ie &gt; 0){ apv = parseInt(i = v.substring(ie + 5)); if (apv &gt; 3) { apv = parseFloat(i); }} else { apv = parseFloat(v);}var isie = (apn == ‘Microsoft Internet Explorer’);var ismac = (u.indexOf(‘Mac’) &gt;= 0);var javascriptVersion = “1.0”;if (String &amp;&amp; String.prototype) { javascriptVersion = ‘1.1’; if (javascriptVersion.match) { javascriptVersion = ‘1.2’; var tm = new Date; if (tm.setUTCDate) { javascriptVersion = ‘1.3’; if (isie &amp;&amp; ismac &amp;&amp; apv &gt;= 5) javascriptVersion = ‘1.4’; var pn = 0; if (pn.toPrecision) { javascriptVersion = ‘1.5’; a = new Array; if (a.forEach) { javascriptVersion = ‘1.6’; i = 0; o = new Object; tcf = new Function(‘o’, ‘var e,i=0;try{i=new Iterator(o)}catch(e){}return i’); i = tcf(o); if (i &amp;&amp; i.next) { javascriptVersion = ‘1.7’; } } } } }}return javascriptVersion;} 6.获取当前点击事件的Object对象 function getEvent() {if (document.all) { return window.event; //如果是ie}func = getEvent.caller;while (func != null) { var arg0 = func.arguments[0]; if (arg0) { if ((arg0.constructor == Event || arg0.constructor == MouseEvent)|| (typeof (arg0) == “object” &amp;&amp; arg0.preventDefault &amp;&amp; arg0.stopPropagation)) { return arg0; } } func = func.caller;}return null;}; 7.字符串截取方法 getCharactersLen: function (charStr, cutCount) { if (charStr == null || charStr == ‘’) return ‘’; var totalCount = 0; var newStr = ‘’; for (var i = 0; i &lt; charStr.length; i++) { var c = charStr.charCodeAt(i); if (c &lt; 255 &amp;&amp; c &gt; 0) { totalCount++; } else { totalCount += 2; } if (totalCount &gt;= cutCount) { newStr += charStr.charAt(i); break; } else { newStr += charStr.charAt(i); } } return newStr;} 8.JS弹出新窗口全屏 var tmp = window.open(“about:blank”, “”, “fullscreen=1”) tmp.moveTo(0, 0); tmp.resizeTo(screen.width + 20, screen.height); tmp.focus(); tmp.location.href = ‘http://www.che168.com/pinggu/eva_‘ + msgResult.message[0] + ‘.html’;var config = “left=0,top=0,width=” + (window.screen.Width) + “,height=” + (window.screen.Height); window.open(‘http://www.che168.com/pinggu/eva‘ + msgResult.message[0] + ‘.html’, “winHanle”, config);//模拟form提交打开新页面var f = document.createElement(“form”); f.setAttribute(‘action’, ‘http://www.che168.com/pinggu/eva‘ + msgResult.message[0] + ‘.html’); f.target = ‘_blank’; document.body.appendChild(f); f.submit(); 9. 全选/全不选 function selectAll(objSelect) { if (objSelect.checked == true) { $(“input[name=’chkId’]”).attr(“checked”, true); $(“input[name=’chkAll’]”).attr(“checked”, true); } else if (objSelect.checked == false) { $(“input[name=’chkId’]”).attr(“checked”, false); $(“input[name=’chkAll’]”).attr(“checked”, false); } } 10. js判断浏览器 判断是否是 IE 浏览器if (document.all){ alert(”IE浏览器”);}else{ alert(”非IE浏览器”);}if (!!window.ActiveXObject){ alert(”IE浏览器”);}else{ alert(”非IE浏览器”);}判断是IE几var isIE=!!window.ActiveXObject;var isIE6=isIE&amp;&amp;!window.XMLHttpRequest;var isIE8=isIE&amp;&amp;!!document.documentMode;var isIE7=isIE&amp;&amp;!isIE6&amp;&amp;!isIE8;if (isIE){if (isIE6){ alert(”ie6″);}else if (isIE8){ alert(”ie8″);}else if (isIE7){ alert(”ie7″);}} 11.判断浏览器 function getOs() {if (navigator.userAgent.indexOf(“MSIE 8.0”) &gt; 0) { return “MSIE8”;}else if (navigator.userAgent.indexOf(“MSIE 6.0”) &gt; 0) { return “MSIE6”;}else if (navigator.userAgent.indexOf(“MSIE 7.0”) &gt; 0) { return “MSIE7”;}else if (isFirefox = navigator.userAgent.indexOf(“Firefox”) &gt; 0) { return “Firefox”;}if (navigator.userAgent.indexOf(“Chrome”) &gt; 0) { return “Chrome”;}else { return “Other”;}} 12.JS判断两个日期大小 适合 2012-09-09 与2012-9-9 两种格式的对比 //得到日期值并转化成日期格式，replace(/-/g, “/“)是根据验证表达式把日期转化成长日期格式，这样再进行判断就好判断了 function ValidateDate() { var beginDate = $(“#t_datestart”).val(); var endDate = $(“#t_dateend”).val(); if (beginDate.length &gt; 0 &amp;&amp; endDate.length&gt;0) { var sDate = new Date(beginDate.replace(/-/g, “/“)); var eDate= new Date(endDate.replace(/-/g, “/“)); if (sDate &gt; eDate) { alert(‘开始日期要小于结束日期’); return false; } } } 13.移除事件 this.moveBind = function (objId, eventType, callBack) {var obj = document.getElementById(objId);if (obj.removeEventListener) { obj.removeEventListener(eventType, callBack, false);}else if (window.detachEvent) { obj.detachEvent(‘on’ + eventType, callBack);}else { obj[‘on’ + eventType] = null;}} 14.回车提交 $(“id”).onkeypress = function (event) {event = (event) ? event : ((window.event) ? window.event : “”)keyCode = event.keyCode ? event.keyCode : (event.which ? event.which : event.charCode);if (keyCode == 13) { $(“SubmitLogin”).onclick();}} 15.JS 执行计时器 timeStart = new Date().getTime();timesEnd = new Date().getTime();document.getElementById(“time”).innerHTML = timesEnd - timeStart; 16.JS 写Cookie function setCookie(name, value, expires, path, domain) {if (!expires) expires = -1;if (!path) path = “/“;var d = “” + name + “=” + value;var e;if (expires &lt; 0) { e = “”;}else if (expires == 0) { var f = new Date(1970, 1, 1); e = “;expires=” + f.toUTCString();}else { var now = new Date(); var f = new Date(now.getTime() + expires * 1000); e = “;expires=” + f.toUTCString();}var dm;if (!domain) { dm = “”;}else { dm = “;domain=” + domain;}document.cookie = name + “=” + value + “;path=” + path + e + dm;}; 17. JS读Cookie function readCookie(name) {var nameEQ = name + “=”;var ca = document.cookie.split(‘;’);for (var i = 0; i &lt; ca.length; i++) { var c = ca[i]; while (c.charAt(0) == ‘ ‘) c = c.substring(1, c.length); if (c.indexOf(nameEQ) == 0) { return decodeURIComponent(c.substring(nameEQ.length, c.length)) }} return null} 18. Ajax请求 C.ajax = function (args) {var self = this;this.options = { type: ‘GET’, async: true, contentType: ‘application/x-www-form-urlencoded’, url: ‘about:blank’, data: null, success: {}, error: {}};this.getXmlHttp = function () { var xmlHttp; try { xmlhttp = new XMLHttpRequest(); } catch (e) { try { xmlhttp = new ActiveXObject(“Msxml2.XMLHTTP”); } catch (e) { xmlHttp = new ActiveXObject(“Microsoft.XMLHTTP”); } } if (!xmlhttp) { alert(‘您的浏览器不支持AJAX’); return false; } return xmlhttp;};this.send = function () { C.each(self.options, function (key, val) { self.options[key] = (args[key] == null) ? val : args[key]; }); var xmlHttp = new self.getXmlHttp(); if (self.options.type.toUpperCase() == ‘GET’) { xmlHttp.open(self.options.type, self.options.url + (self.options.data == null ? “” : ((/[?]$/.test(self.options.url) ? ‘&amp;’ : ‘?’) + self.options.data)), self.options.async); } else { xmlHttp.open(self.options.type, self.options.url, self.options.async); xmlHttp.setRequestHeader(‘Content-Length’, self.options.data.length); } xmlHttp.setRequestHeader(‘Content-Type’, self.options.contentType); xmlHttp.onreadystatechange = function () { if (xmlHttp.readyState == 4) { if (xmlHttp.status == 200 || xmlHttp.status == 0) { if (typeof self.options.success == ‘function’) self.options.success(xmlHttp.responseText); xmlHttp = null; } else { if (typeof self.options.error == ‘function’) self.options.error(‘Server Status: ‘ + xmlHttp.status); } } }; xmlHttp.send(self.options.type.toUpperCase() == ‘POST’ ? self.options.data.toString() : null);};this.send();}; 19. JS StringBuilder 用法 function StringBuilder() {this.strings = new Array;};StringBuilder.prototype.append = function (str) {this.strings.push(str);};StringBuilder.prototype.toString = function () {return this.strings.join(‘’);}; 20. JS加载到顶部LoadJS function loadJS (url, fn) { var ss = document.getElementsByName(‘script’), loaded = false; for (var i = 0, len = ss.length; i &lt; len; i++) { if (ss[i].src &amp;&amp; ss[i].getAttribute(‘src’) == url) { loaded = true; break; } } if (loaded) { if (fn &amp;&amp; typeof fn != ‘undefined’ &amp;&amp; fn instanceof Function) fn(); return false; } var s = document.createElement(‘script’), b = false; s.setAttribute(‘type’, ‘text/javascript’); s.setAttribute(‘src’, url); s.onload = s.onreadystatechange = function () { if (!b &amp;&amp; (!this.readyState || this.readyState == ‘loaded’ || this.readyState == ‘complete’)) { b = true; if (fn &amp;&amp; typeof fn != ‘undefined’ &amp;&amp; fn instanceof Function) fn(); } }; document.getElementsByTagName(‘head’)[0].appendChild(s);},bind: function (objId, eventType, callBack) { //适用于任何浏览器的绑定 var obj = document.getElementById(objId); if (obj.addEventListener) { obj.addEventListener(eventType, callBack, false); } else if (window.attachEvent) { obj.attachEvent(‘on’ + eventType, callBack); } else { obj[‘on’ + eventType] = callBack; }}function JSLoad (args) { s = document.createElement(“script”); s.setAttribute(“type”, “text/javascript”); s.setAttribute(“src”, args.url); s.onload = s.onreadystatechange = function () { if (!s.readyState || s.readyState == “loaded” || s.readyState == “complete”) { if (typeof args.callback == “function”) args.callback(this, args); s.onload = s.onreadystatechange = null; try { s.parentNode &amp;&amp; s.parentNode.removeChild(s); } catch (e) { } } }; document.getElementsByTagName(“head”)[0].appendChild(s);} 21.清空LoadJS加载到顶部的js引用 function ClearHeadJs (src) { var js = document.getElementsByTagName(‘head’)[0].children; var obj = null; for (var i = 0; i &lt; js.length; i++) { if (js[i].tagName.toLowerCase() == “script” &amp;&amp; js[i].attributes[‘src’].value.indexOf(src) &gt; 0) { obj = js[i]; } } document.getElementsByTagName(‘head’)[0].removeChild(obj);}; 22. JS替换非法字符主要用在密码验证上出现的特殊字符 function URLencode(sStr) {return escape(sStr).replace(/+/g, ‘%2B’).replace(/“/g, ‘%22’).replace(/‘/g, ‘%27’).replace(///g, ‘%2F’);}; 23. 按Ctrl + Entert 直接提交表单 document.body.onkeydown = function (evt) {evt = evt ? evt : (window.event ? window.event : null);if (13 == evt.keyCode &amp;&amp; evt.ctrlKey) { evt.returnValue = false; evt.cancel = true; PostData();}}; 24.获取当前时间 const time_format=()=&gt;{ const date=new Date(); let year=date.getFullYear(); let month=zero_add(date.getMonth()+1); let day=zero_add(date.getDate()); let hours=zero_add(date.getHours()); let minutes=zero_add(date.getMinutes()); let seconds=zero_add(date.getSeconds()); return year+’-‘+month+’-‘+day+” “+hours+’:’+minutes+’:’+seconds // 2017-7-14 14:02:07}const zero_add=(date)=&gt;{ if(date&lt;10) date=’0’+date; return date;}console.log(time_format()) 25. Js去掉空格方法 String.prototype.Trim = function(){ return this.replace(/(^s)|(s$)/g, “”); }String.prototype.LTrim = function(){return this.replace(/(^s)/g, “”);}String.prototype.RTrim = function(){return this.replace(/(s$)/g, “”);} 26. Js动态移除head里的js引用 this.ClearHeadJs = function (src) {var js = document.getElementsByTagName(‘head’)[0].children;var obj = null;for (var i = 0; i &lt; js.length; i++) { if (js[i].tagName.toLowerCase() == “script” &amp;&amp; js[i].attributes[‘src’].value.indexOf(src) &gt; 0) { obj = js[i]; }}document.getElementsByTagName(‘head’)[0].removeChild(obj);}; 27.整个UL点击事件 加在UL里的onclick里 function CreateFrom(url, params) {var f = document.createElement(“form”);f.setAttribute(“action”, url);for (var i = 0; i &lt; params.length; i++) { var input = document.createElement(“input”); input.setAttribute(“type”, “hidden”); input.setAttribute(“name”, params[i].paramName); input.setAttribute(“value”, params[i].paramValue); f.appendChild(input);}f.target = “_blank”;document.body.appendChild(f);f.submit();}; 28. 判断浏览器使用的是哪个 JS 版本 &lt;script language=”javascript”&gt; var jsversion = 1.0;&lt;/script&gt;&lt;script language=”javascript1.1”&gt; jsversion = 1.1;&lt;/script&gt;&lt;script language=”javascript1.2”&gt; jsversion = 1.2;&lt;script language=”javascript1.3”&gt; jsversion = 1.3;&lt;script language=”javascript1.4”&gt; jsversion = 1.4;&lt;script language=”javascript1.5”&gt; jsversion = 1.5;&lt;script language=”javascript1.6”&gt; jsversion = 1.6;&lt;script language=”javascript1.7”&gt; jsversion = 1.7;&lt;script language=”javascript1.8”&gt; jsversion = 1.8;&lt;script language=”javascript1.9”&gt; jsversion = 1.9;&lt;script language=”javascript2.0”&gt; jsversion = 2.0alert(jsversion);","tags":[{"name":"Javascript","slug":"Javascript","permalink":"http://hanmhui.com/tags/Javascript/"}]},{"title":"如何解决git提交代码时每次都要输入用户名和密码问题","date":"2017-07-05T05:23:30.000Z","path":"2017/07/05/test/","text":"在git bash 中执行设置记住密码（默认15分钟）：git config –global credential.helper cache如果想自己设置时间，可以这样做：git config credential.helper ‘cache –timeout=3600’这样就设置一个小时之后失效 长期存储密码：git config –global credential.helper store 使用ssh方式1、在每次push 的时候，都要输入用户名和密码，是不是很麻烦？原因是使用了https方式 push，在git bash里边输入 git remote -v可以看到形如一下的返回结果： 2、接下来，我们把它换成ssh方式的。123$ git remote rm origin\"$ git remote add origin git@github.com:sosout/myblog.git\"$ git push origin\" 3、问题是不是解决了呢？可能这样还不行，还应该添加SSH公匙。ssh-keygen -t rsa -C “email”,email是你注册在github上的邮箱。 我这边因为之前就有设置，所以会提示是否覆盖，小括号里有文件的路径. 4、进入自己的github主页，然后点击setting，再点击左侧导航中的SSH and GPG keys 5、点击右侧的New SSH key，会出现如下界面 这样以后push 就可以不用输入密码了","tags":[{"name":"Github","slug":"Github","permalink":"http://hanmhui.com/tags/Github/"}]}]